<% if @shortlist_time == 'open' && !ShortList.exists?(mentee_id: current_user.id) && !current_user.matched? %>
  <div class="desktop-view">
    <%= render 'dashboard/mentee/mentee_shortlist_desktop', mentors_data: mentors_data %>
  </div>
  <div class="mobile-view">
    <%= render 'dashboard/mentee/mentee_shortlist_mobile', mentors_data: mentors_data %>
  </div>
<% else %>
  <% if current_user.matched? %>
    <%= render 'dashboard/mentee/mentee_dashboard_af', mentors_data: mentors_data %>
  <% else %>
    <%= render 'dashboard/mentee/mentee_dashboard_bf', mentors_data: mentors_data %>
  <% end %>
<% end %>

<%= render 'short_list_confirm' %>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const currentUser = <%= current_user.id %>;
    const currentUserShortlist = <%= current_user.shortlist.to_json.html_safe %>;
    const submitButton = document.getElementById("submit-shortlist-button");
    const submitButtonM = document.getElementById("submit-shortlist-button-m");

    const mentorListSectionM = document.getElementById("mentor-list-section-m");
    const shortListCardM = document.getElementById("short-list-card-m");

    // mobile: add mentor card to shortlist
    mentorListSectionM.querySelectorAll(".mentor-card").forEach((mentorCard) => {
      mentorCard.addEventListener("click", function () {
        if (shortListCardM.children.length >= 5) {
          alert("You can only select up to 5 mentors.");
          return;
        }

        if (!shortListCardM.querySelector(`#${mentorCard.id}`)) {
          shortListCardM.appendChild(mentorCard);
          updateShortlistOrder(shortListCardM, ".order-number");
        }
      });
    });

    function updateShortlistOrder(container, orderClass) {
      const shortlistOrder = container.querySelectorAll(".mentor-info");
      shortlistOrder.forEach((info, index) => {
        let orderNumber = info.querySelector(orderClass);
        if (!orderNumber) {
          orderNumber = document.createElement("span");
          orderNumber.className = orderClass.slice(1);
          info.prepend(orderNumber);
        }
        orderNumber.textContent = `${index + 1}`;
      });
    }

    // dragula
    const containers = [
      document.getElementById("mentor-list-section"),
      document.getElementById("short-list-card"),
      document.getElementById("mentor-list-section-m"),
      document.getElementById("short-list-card-m"),
    ];
    const drake = dragula(containers);

    drake.on("drop", function () {
      updateShortlistOrder(
        document.getElementById("short-list-card"),
        ".order-number"
      );
      updateShortlistOrder(shortListCardM, ".order-number");

      enableSubmitButtons();
    });

    function enableSubmitButtons() {
      submitButton.disabled = false;
      submitButtonM.disabled = false;
    }

    // submit shortlist
    [submitButton, submitButtonM].forEach((button, idx) => {
      button.addEventListener("click", function () {
        const shortlistContainer = idx === 0 ? "short-list-card" : "short-list-card-m";
        const shortlist = Array.from(document.getElementById(shortlistContainer).children).map((item, index) => {
          const idNumber = Number(item.id.split("-").pop());
          return {
            order: index + 1,
            id: idNumber,
            name: item.querySelector(".mentor-name")?.innerText || "Unknown Name",
            title: item.querySelector(".mentor-title")?.innerText || "Unknown Title",
          };
        });

        confirmSubmission(currentUser, shortlist);
      });
    });

    // confirm submission modal
    function confirmSubmission(userId, shortlist) {
      const shortlistDisplay = document.getElementById("shortlist-display");
      const modal = document.getElementById("confirmation-modal");
      const confirmButton = document.getElementById("confirm-submit");
      const cancelButton = document.getElementById("cancel-submit");

      shortlistDisplay.innerHTML = ""; // clear previous content
      shortlist.forEach(({ name, title }, index) => {
        const mentorItem = document.createElement("div");
        mentorItem.className = "mb-2";
        mentorItem.innerHTML = `<strong>${index + 1}.</strong> ${name} (${title})`;
        shortlistDisplay.appendChild(mentorItem);
      });

      modal.classList.remove("hidden");

      confirmButton.onclick = function () {
        modal.classList.add("hidden");
        updateUserShortlist(userId, shortlist.map((mentor) => mentor.id));
      };

      cancelButton.onclick = function () {
        modal.classList.add("hidden");
      };
    }

    // update shortlist in backend
    function updateUserShortlist(userId, shortlist) {
      fetch("<%= update_shortlist_path(current_user.id) %>", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "X-CSRF-Token": document.querySelector('meta[name="csrf-token"]').content,
        },
        body: JSON.stringify({ shortlist }),
      })
        .then((response) => {
          if (!response.ok) throw new Error("Network response was not ok");
          return response.json();
        })
        .then((data) => {
          console.log("Shortlist submitted successfully:", data);
          submitButton.disabled = true;
          submitButtonM.disabled = true;
          drake.destroy();
          location.reload();
        })
        .catch((error) => {
          console.error("Error submitting shortlist:", error);
        });
    }
  });
</script>