<div class="grid grid-col-1 sm:grid-cols-4 gap-5 py-9 px-24 max-w-[100%]">
  <!-- Left Section: Stack the two cards -->
  <div class="flex flex-col space-y-5 col-span-1">
    <%= render partial: 'user_card' %>
    <%= render partial: 'program_card' %>
  </div>
  <!-- Right Section: Main Content -->
  <% if @shortlist_time == false %>
    <div class="col-span-3">
  <% else %>
    <div class="col-span-2">
  <% end %>
    <h1 class="text-2xl font-semibold text-[#202020] mb-1">
      Available Mentors
    </h1>
    <p class="text-sm text-[#898989] mb-5">
      Discover insights and stories from our mentors to inspire your own journey.
    </p>
    <!-- Grid of mentors -->
    <div id="mentor-list-section"  class="grid grid-cols-1 sm:grid-cols-2 gap-3 max-w-[55rem] rounded-[0.55rem] place-content-center bg-[#202020]">
      <% available_mentors_count = 0 %>
      <% mentors_data.each do |mentor| %>
      <%# TODO: Refactor section below (might need to modify user methods in model or create new scope) %>
        <% current_mentee_count = mentor.mentee_capacity_count(mentor.cohort.id) %>
        <% capacity_cap = mentor.capacity %>
        <% if current_user.cohort.running? && current_mentee_count < capacity_cap %>
          <% if @shortlist_time == false %>
            <%= render 'profile_card', mentor: mentor %>
          <% else %>
            <%= render 'profile_card_shortlist', mentor: mentor %>
          <% end %>
          <% available_mentors_count += 1 %>
        <% end %>
      <% end %>
      <!-- If no available mentors -->
      <% if !current_user.cohort.running? %>
        <h2> Mentor matching is closed for cohort <%= current_user.cohort.id %> </h2>
      <% elsif available_mentors_count == 0 %>
        <h2> No more available mentors in cohort <%= current_user.cohort.id %> </h2>
      <% end %>
    </div>
  </div>
  <% if @shortlist_time == true %>
    <div class="col-span-1">
      <%= render partial: 'shortlist_card' %>
    </div>
  <% end %>
  
</div>

<script>
        document.addEventListener("DOMContentLoaded", function () {
            const containers = [
                document.getElementById("mentor-list-section"),
                document.getElementById("short-list-card"),
            ];

            const drake = dragula(containers, {
                moves: function (el, container, handle) {
                    return handle.classList.contains("handle");
                },
            });

            drake.on("drop", function (el, target, source, sibling) {
                console.log("Dropped:", el);
                console.log("New Parent:", target);
            });
        });
    </script>